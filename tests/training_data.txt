The ``training_data`` module
======================

First import all the functions

>>> from q_lab_toolbox.training_data import *

>>> m, L, N = 2, 5, 3

>>> rho0s = random_rho0s(m, L, seed=42)
>>> len(rho0s) == L
True
>>> rho0s[0]
Quantum object: dims = [[2, 2], [2, 2]], shape = (4, 4), type = oper, isherm = True
Qobj data =
...

>>> from q_lab_toolbox.target_systems import DecaySystem
>>> decay = DecaySystem(
...    m=m,
...    gammas=(0.3, 1.4),
...    ryd_interaction=1.2,
...    omegas=(0.3, 0.5)
...    )

>>> rhoss = solve_lindblad_rho0s(rho0s, 0.1, 3, decay)
>>> rhoss.shape == (L, N+1, 2**m, 2**m)
True

>>> from q_lab_toolbox.observables import order_n_observables
>>> Os = order_n_observables(m, 1)

>>> mk_training_data(rhoss, Os)
TrainingData(...)
